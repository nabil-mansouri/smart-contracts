/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakingContract } from "./StakingContract";

export class StakingContractFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    config: {
      endDate: BigNumberish;
      startDate: BigNumberish;
      rewardTotal: BigNumberish;
      tokenAddress: string;
      rewardPercent: BigNumberish;
    },
    overrides?: Overrides
  ): Promise<StakingContract> {
    return super.deploy(config, overrides || {}) as Promise<StakingContract>;
  }
  getDeployTransaction(
    config: {
      endDate: BigNumberish;
      startDate: BigNumberish;
      rewardTotal: BigNumberish;
      tokenAddress: string;
      rewardPercent: BigNumberish;
    },
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(config, overrides || {});
  }
  attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  connect(signer: Signer): StakingContractFactory {
    return super.connect(signer) as StakingContractFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardTotal",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
        ],
        internalType: "struct StakingContract.StakeConfig",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrawed",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceCoin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "balanceToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectRewardsCheck",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "serviceId",
        type: "uint256",
      },
    ],
    name: "generateServiceKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "service",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum AbstractContractState.PaymentType",
            name: "paymentType",
            type: "uint8",
          },
        ],
        internalType: "struct AbstractContractState.Price",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "historyOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earned",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct StakingContract.UserInfos[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "serviceId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pricing",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "enum AbstractContractState.PaymentType",
        name: "paymentType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "earned",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paid",
            type: "uint256",
          },
        ],
        internalType: "struct StakingContract.UserReward",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardTotal",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
        ],
        internalType: "struct StakingContract.StakeConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "setConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stackingInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeRemain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardRemain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardDistribute",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
        ],
        internalType: "struct StakingContract.StakeInfos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stakeCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardTotal",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rewardPercent",
            type: "uint256",
          },
        ],
        internalType: "struct StakingContract.StakeConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakingOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earned",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct StakingContract.UserInfos",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "serviceId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "unlockPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_collect",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawCoin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600880546001600160a01b031916731820a4b7618bde71dce8cdc73aab6c95905fad241790556000600f8190556010553480156200004157600080fd5b506040516200335638038062003356833981016040819052620000649162000368565b6200006f33620001b0565b6000805460ff60a01b1916905560018055620000ac7fcd43a244c971ec991f6cf3dffd092aaf7f5a7600d3e706361a518ee2dd67e2613362000200565b620000d87ff206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace3362000200565b620001047f7d26d95f8ae6390bb30573972090129bd7a3bc0405a4903023e177077b473eed3362000200565b6200011160003362000200565b6200011c8162000210565b506008546040516329965a1d60e01b815230600482018190527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b602483015260448201526001600160a01b03909116906329965a1d90606401600060405180830381600087803b1580156200019057600080fd5b505af1158015620001a5573d6000803e3d6000fd5b5050505050620003f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200020c8282620002c4565b5050565b600080546001600160a01b03163314620002705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b5080516009556020810151600a556040810151600b556060810151600d80546001600160a01b039092166001600160a01b031992831681179091556080830151600e55600c80549092161790556001919050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff166200020c5760008281526002602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620003243390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600060a082840312156200037a578081fd5b60405160a081016001600160401b0381118282101715620003a957634e487b7160e01b83526041600452602483fd5b60409081528351825260208085015190830152838101519082015260608301516001600160a01b0381168114620003de578283fd5b60608201526080928301519281019290925250919050565b612f5080620004066000396000f3fe6080604052600436106101a25760003560e01c806223de29146101ae57806301ffc9a7146101d05780630249b66014610205578063037859af1461023357806304599012146102605780630bb4b6aa146102805780630dedd016146102ad5780631d62ebd914610308578063248a9ca3146103855780632f2ff15d146103a557806331d98b3f146103c557806336568abe146103f257806338d07436146104125780633f4ba83a146104325780634179f7881461044757806354fc0b691461045c5780635505b37a1461047c5780635c975abb1461049c5780636220aea8146104b157806370bb45b3146104c6578063715018a6146104db5780638456cb59146104f057806389476069146105055780638da5cb5b1461052557806390b4f8841461054757806391d14854146105c957806392816dea146105e95780639b10b6f514610609578063a217fddf1461061f578063a694fc3a14610634578063b0e1b4e814610654578063b10567ce14610674578063cbe9e764146106d5578063d547741f14610774578063f2fde38b14610794578063f784a6cd146107b457600080fd5b366101a957005b600080fd5b3480156101ba57600080fd5b506101ce6101c9366004612737565b6107c9565b005b3480156101dc57600080fd5b506101f06101eb366004612892565b610949565b60405190151581526020015b60405180910390f35b34801561021157600080fd5b5061022561022036600461283d565b610980565b6040519081526020016101fc565b34801561023f57600080fd5b5061025361024e36600461271d565b6109ac565b6040516101fc9190612dc4565b34801561026c57600080fd5b5061022561027b36600461271d565b610a66565b34801561028c57600080fd5b506102a061029b36600461271d565b610b18565b6040516101fc9190612aa0565b3480156102b957600080fd5b506102c2610bc8565b6040516101fc91908151815260208083015190820152604080830151908201526060808301516001600160a01b0316908201526080918201519181019190915260a00190565b34801561031457600080fd5b5061036a61032336600461271d565b6040805180820190915260008082526020820152506001600160a01b0316600090815260116020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101fc565b34801561039157600080fd5b506102256103a03660046127fa565b610c70565b3480156103b157600080fd5b506101ce6103c0366004612812565b610c85565b3480156103d157600080fd5b506103e56103e03660046127fa565b610ca7565b6040516101fc9190612d85565b3480156103fe57600080fd5b506101ce61040d366004612812565b610d6a565b34801561041e57600080fd5b506101f061042d366004612953565b610de8565b34801561043e57600080fd5b506101f0610f5d565b34801561045357600080fd5b50610225610fa3565b34801561046857600080fd5b506101f06104773660046128ba565b610fd9565b34801561048857600080fd5b506101f06104973660046127fa565b61105e565b3480156104a857600080fd5b506101f06111be565b3480156104bd57600080fd5b506101f06111ce565b3480156104d257600080fd5b5061022561128a565b3480156104e757600080fd5b506101ce6112ec565b3480156104fc57600080fd5b506101f0611327565b34801561051157600080fd5b506101f061052036600461271d565b611360565b34801561053157600080fd5b5061053a6114ab565b6040516101fc9190612a4f565b34801561055357600080fd5b5061055c6114ba565b6040516101fc9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b3480156105d557600080fd5b506101f06105e4366004612812565b611590565b3480156105f557600080fd5b506101ce61060436600461285e565b6115bb565b34801561061557600080fd5b5061022560075481565b34801561062b57600080fd5b50610225600081565b34801561064057600080fd5b506101f061064f3660046127fa565b6115f7565b34801561066057600080fd5b506101f061066f3660046127fa565b6116f2565b34801561068057600080fd5b506106c561068f3660046127fa565b6005602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b6040516101fc9493929190612dd2565b3480156106e157600080fd5b506107366106f03660046127fa565b60066020526000908152604090208054600182015460028301546003840154600490940154929391926001600160a01b039182169291811690600160a01b900460ff1686565b6040805196875260208701959095526001600160a01b03938416948601949094526060850191909152166080830152151560a082015260c0016101fc565b34801561078057600080fd5b506101ce61078f366004612812565b611819565b3480156107a057600080fd5b506101ce6107af36600461271d565b611836565b3480156107c057600080fd5b506102256118d6565b600260015414156107f55760405162461bcd60e51b81526004016107ec90612d09565b60405180910390fd5b6002600155600d546001600160a01b0316331461084d5760405162461bcd60e51b815260206004820152601660248201527529ba30b5b4b7339d1024b73b30b634b2103a37b5b2b760511b60448201526064016107ec565b600d546001600160a01b0388811691161480610881575061086c6114ab565b6001600160a01b0316876001600160a01b0316145b1561088b5761093b565b6108936111be565b156108d65760405162461bcd60e51b815260206004820152601360248201527214dd185ad94e881cdd185ad9481c185d5cd959606a1b60448201526064016107ec565b6108e0878661192f565b15156001146109015760405162461bcd60e51b81526004016107ec90612bf2565b7f8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c4608786604051610932929190612a87565b60405180910390a15b505060018055505050505050565b60006001600160e01b03198216637965db0b60e01b148061097a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6109e76040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b038216600090815260126020908152604091829020825160c08101845281548082526001830154938201939093526002820154938101849052600382015460608201526004820154608082015260059091015460ff16151560a082015242929091610a5a918490611ada565b60608201529392505050565b600033610a716114ab565b6001600160a01b031614610a975760405162461bcd60e51b81526004016107ec90612c93565b6040516370a0823160e01b81526001600160a01b038316906370a0823190610ac3903090600401612a4f565b60206040518083038186803b158015610adb57600080fd5b505afa158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a919061293b565b919050565b6001600160a01b0381166000908152601360209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610bbd5760008481526020908190206040805160c08101825260068602909201805483526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460ff16151560a08301529083529092019101610b50565b505050509050919050565b610c036040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b33610c0c6114ab565b6001600160a01b031614610c325760405162461bcd60e51b81526004016107ec90612c93565b506040805160a0810182526009548152600a546020820152600b5491810191909152600d546001600160a01b03166060820152600e54608082015290565b60009081526002602052604090206001015490565b610c8e82610c70565b610c988133611b7b565b610ca28383611bdf565b505050565b610ccf6040805160808101825260008082526020820181905291810182905290606082015290565b6000828152600560209081526040918290208251608081018452815481526001820154928101929092526002808201546001600160a01b03811694840194909452909283916060840191600160a01b900460ff1690811115610d4157634e487b7160e01b600052602160045260246000fd5b6002811115610d6057634e487b7160e01b600052602160045260246000fd5b9052509392505050565b6001600160a01b0381163314610dda5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016107ec565b610de48282611c65565b5050565b600060026001541415610e0d5760405162461bcd60e51b81526004016107ec90612d09565b6002600155610e1a6111be565b15610e375760405162461bcd60e51b81526004016107ec90612bc8565b610e413384611ccc565b1515600114610e625760405162461bcd60e51b81526004016107ec90612c64565b600c5460405163a9059cbb60e01b81526000916001600160a01b03169063a9059cbb90610e959033908890600401612a87565b602060405180830381600087803b158015610eaf57600080fd5b505af1158015610ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee791906127de565b9050600181151514610f0b5760405162461bcd60e51b81526004016107ec90612b96565b600080516020612edb8339815191523385604051610f2a929190612a87565b60405180910390a18215610f4d57610f426000611e22565b506001915050610f53565b60019150505b6001805592915050565b600033610f686114ab565b6001600160a01b031614610f8e5760405162461bcd60e51b81526004016107ec90612c93565b610f9661200f565b610f9e6111be565b905090565b600033610fae6114ab565b6001600160a01b031614610fd45760405162461bcd60e51b81526004016107ec90612c93565b504790565b600033610fe46114ab565b6001600160a01b03161461100a5760405162461bcd60e51b81526004016107ec90612c93565b5080516009556020810151600a556040810151600b556060810151600d80546001600160a01b039092166001600160a01b031992831681179091556080830151600e55600c80549092161790556001919050565b6000600260015414156110835760405162461bcd60e51b81526004016107ec90612d09565b6002600155336110916114ab565b6001600160a01b0316146110b75760405162461bcd60e51b81526004016107ec90612c93565b6110c13383611ccc565b15156001146110e25760405162461bcd60e51b81526004016107ec90612c64565b600c5460405163a9059cbb60e01b81526000916001600160a01b03169063a9059cbb906111159033908790600401612a87565b602060405180830381600087803b15801561112f57600080fd5b505af1158015611143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116791906127de565b905060018115151461118b5760405162461bcd60e51b81526004016107ec90612b96565b600080516020612edb83398151915233846040516111aa929190612a87565b60405180910390a150506001808055919050565b600054600160a01b900460ff1690565b6000600080516020612efb8339815191526111e98133611b7b565b4780156112815760006111fa6114ab565b90506000816001600160a01b03166108fc849081150290604051600060405180830381858888f1945050505081151560011490506112765760405162461bcd60e51b815260206004820152601960248201527815da5d1a191c985dce881d1c985b9cd9995c8819985a5b1959603a1b60448201526064016107ec565b600194505050505090565b60009250505090565b6000600260015414156112af5760405162461bcd60e51b81526004016107ec90612d09565b60026001556112bc6111be565b156112d95760405162461bcd60e51b81526004016107ec90612bc8565b6112e36001611e22565b90506001805590565b336112f56114ab565b6001600160a01b03161461131b5760405162461bcd60e51b81526004016107ec90612c93565b61132560006120a1565b565b6000336113326114ab565b6001600160a01b0316146113585760405162461bcd60e51b81526004016107ec90612c93565b610f966120f1565b6000600080516020612efb83398151915261137b8133611b7b565b6040516370a0823160e01b815283906000906001600160a01b038316906370a08231906113ac903090600401612a4f565b60206040518083038186803b1580156113c457600080fd5b505afa1580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc919061293b565b9050801561149e57600061140e6114ab565b90506000836001600160a01b031663a9059cbb83856040518363ffffffff1660e01b8152600401611440929190612a87565b602060405180830381600087803b15801561145a57600080fd5b505af115801561146e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149291906127de565b95506114a59350505050565b6000935050505b50919050565b6000546001600160a01b031690565b6115096040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000611513612151565b9050600061151f612167565b9050600061153a601054600b5461218b90919063ffffffff16565b9050604051806101200160405280600a5481526020016009548152602001838152602001848152602001600f548152602001600b5481526020018281526020016010548152602001600e54815250935050505090565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7ff206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace6115e68133611b7b565b6115f1848484612197565b50505050565b60006116016111be565b1561161e5760405162461bcd60e51b81526004016107ec90612bc8565b6000821161163e5760405162461bcd60e51b81526004016107ec90612cc8565b600c546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061167390339030908890600401612a63565b602060405180830381600087803b15801561168d57600080fd5b505af11580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c591906127de565b90506001811515146116e95760405162461bcd60e51b81526004016107ec90612d40565b50600192915050565b6000336116fd6114ab565b6001600160a01b0316146117235760405162461bcd60e51b81526004016107ec90612c93565b600082116117435760405162461bcd60e51b81526004016107ec90612cc8565b600c546040516323b872dd60e01b81526000916001600160a01b0316906323b872dd9061177890339030908890600401612a63565b602060405180830381600087803b15801561179257600080fd5b505af11580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca91906127de565b90506001811515146117ee5760405162461bcd60e51b81526004016107ec90612d40565b6117f8338461192f565b15156001146116e95760405162461bcd60e51b81526004016107ec90612bf2565b61182282610c70565b61182c8133611b7b565b610ca28383611c65565b3361183f6114ab565b6001600160a01b0316146118655760405162461bcd60e51b81526004016107ec90612c93565b6001600160a01b0381166118ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ec565b6118d3816120a1565b50565b6000600260015414156118fb5760405162461bcd60e51b81526004016107ec90612d09565b6002600155336119096114ab565b6001600160a01b0316146112d95760405162461bcd60e51b81526004016107ec90612c93565b6000428261194f5760405162461bcd60e51b81526004016107ec90612b21565b6001600160a01b0384166119755760405162461bcd60e51b81526004016107ec90612c1f565b60095481106119c55760405162461bcd60e51b815260206004820152601c60248201527b14dd185ada5b99ce881cdd185ada5b99c81a5cc8199a5b9a5cda195960221b60448201526064016107ec565b6119ce8361236f565b611a0f5760405162461bcd60e51b815260206004820152601260248201527114dd185ada5b99ce88141bdbdb08199d5b1b60721b60448201526064016107ec565b6000611a1b8583612382565b90506040518060c0016040528083815260200160008152602001611a4c86846002015461249590919063ffffffff16565b815260006020808301829052604080840183905260609384018390526001600160a01b038a1683526012825291829020845181559084015160018201559083015160028201559082015160038201556080820151600482015560a0909101516005909101805460ff1916911515919091179055600f54611acc9085612495565b600f55506001949350505050565b600080611ae9600a54866124a1565b90506000611af9600954866124b8565b905081811015611b0e57600092505050611b74565b6000611b27600a5460095461218b90919063ffffffff16565b90506000611b35838561218b565b90506000611b596064611b53600e548a6124c790919063ffffffff16565b906124d3565b90506000611b6b84611b5385856124c7565b96505050505050505b9392505050565b611b858282611590565b610de457611b9d816001600160a01b031660146124df565b611ba88360206124df565b604051602001611bb99291906129e0565b60408051601f198184030181529082905262461bcd60e51b82526107ec91600401612aee565b611be98282611590565b610de45760008281526002602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611c213390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c6f8282611590565b15610de45760008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000808211611ced5760405162461bcd60e51b81526004016107ec90612b21565b6001600160a01b038316611d135760405162461bcd60e51b81526004016107ec90612c1f565b426000611d208583612382565b90508381600201541015611d735760405162461bcd60e51b815260206004820152601a6024820152790a6e8c2d6d2dcce7440aed2e8d0c8e4c2ee40e8dede40daeac6d60331b60448201526064016107ec565b6040518060c0016040528083815260200160008152602001611da286846002015461218b90919063ffffffff16565b815260006020808301829052604080840183905260609384018390526001600160a01b038a1683526012825291829020845181559084015160018201559083015160028201559082015160038201556080820151600482015560a0909101516005909101805460ff1916911515919091179055600f54611acc908561218b565b33600090815260116020908152604080832060129092528220600182015482548491611e4e919061218b565b905060008260020154118015611e695750600582015460ff16155b15611ea657815460028301544291611e82918390611ada565b600384018190556004840154611ea291611e9b9161218b565b8390612495565b9150505b8415611efc5760008111611efc5760405162461bcd60e51b815260206004820152601d60248201527f5374616b696e673a204e6f207265776172647320617661696c61626c6500000060448201526064016107ec565b8254600184015560038201546004830155601054611f1a9082612495565b601055801561200757600c5460405163a9059cbb60e01b81526000916001600160a01b03169063a9059cbb90611f569033908690600401612a87565b602060405180830381600087803b158015611f7057600080fd5b505af1158015611f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa891906127de565b9050600181151514611fcc5760405162461bcd60e51b81526004016107ec90612b96565b7f136c394ae24571ae6a61fb80eb31f9f8e69389cfc2469abdf3dce0d1700b4efa3383604051611ffd929190612a87565b60405180910390a1505b949350505050565b6120176111be565b61205a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107ec565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516120979190612a4f565b60405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6120f96111be565b156121165760405162461bcd60e51b81526004016107ec90612bc8565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861208a3390565b6000610f9e600f54612161612167565b9061218b565b6000610f9e6064612185600e54600b546124d390919063ffffffff16565b906124c7565b6000611b748284612e5c565b60006121a38484610980565b6000818152600660205260409020805491925090158015906121d157506004810154600160a01b900460ff16155b156123685760048101546001600160a01b038481169116146122435760405162461bcd60e51b815260206004820152602560248201527f5061796d656e743a206f6e6c79206f776e65722063616e20756e6c6f636b20746044820152646f6b656e7360d81b60648201526084016107ec565b60028101546001600160a01b031661229e578054604051600091339181156108fc02919084818181858888f1945050505081151560011490506122985760405162461bcd60e51b81526004016107ec90612b64565b50612352565b6002810154600480830154835460405163a9059cbb60e01b81526000946001600160a01b039081169463a9059cbb946122da9492169201612a87565b602060405180830381600087803b1580156122f457600080fd5b505af1158015612308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232c91906127de565b90506001811515146123505760405162461bcd60e51b81526004016107ec90612b64565b505b60048101805460ff60a01b1916600160a01b1790555b5050505050565b6000612379612151565b90911115919050565b6001600160a01b03821660009081526012602052604081206002810154158015906123b25750600581015460ff16155b15611b74576123ca8160000154848360020154611ada565b600382810191825560018084018681556005808601805460ff19908116851782556001600160a01b038b1660008181526013602090815260408083208054808b0182559084528284208d546006909202019081559754988801989098556002808c0154908801558954988701989098556004808b015490870155925494909301805490911660ff9094161515939093179092558152601190925290209054815461247391612495565b81556004820154600182015461248891612495565b6001909101559392505050565b6000611b748284612e05565b6000818310156124b15781611b74565b5090919050565b60008183106124b15781611b74565b6000611b748284612e3d565b6000611b748284612e1d565b606060006124ee836002612e3d565b6124f9906002612e05565b6001600160401b0381111561251e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612548576020820181803683370190505b509050600360fc1b8160008151811061257157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106125ae57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006125d2846002612e3d565b6125dd906001612e05565b90505b6001811115612671576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061261f57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061264357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361266a81612e9f565b90506125e0565b508315611b745760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107ec565b80356001600160a01b0381168114610b1357600080fd5b60008083601f8401126126e8578182fd5b5081356001600160401b038111156126fe578182fd5b60208301915083602082850101111561271657600080fd5b9250929050565b60006020828403121561272e578081fd5b611b74826126c0565b60008060008060008060008060c0898b031215612752578384fd5b61275b896126c0565b975061276960208a016126c0565b965061277760408a016126c0565b95506060890135945060808901356001600160401b0380821115612799578586fd5b6127a58c838d016126d7565b909650945060a08b01359150808211156127bd578384fd5b506127ca8b828c016126d7565b999c989b5096995094979396929594505050565b6000602082840312156127ef578081fd5b8151611b7481612ecc565b60006020828403121561280b578081fd5b5035919050565b60008060408385031215612824578182fd5b82359150612834602084016126c0565b90509250929050565b6000806040838503121561284f578182fd5b50508035926020909101359150565b600080600060608486031215612872578283fd5b8335925060208401359150612889604085016126c0565b90509250925092565b6000602082840312156128a3578081fd5b81356001600160e01b031981168114611b74578182fd5b600060a082840312156128cb578081fd5b60405160a081016001600160401b03811182821017156128f957634e487b7160e01b83526041600452602483fd5b8060405250823581526020830135602082015260408301356040820152612922606084016126c0565b6060820152608083013560808201528091505092915050565b60006020828403121561294c578081fd5b5051919050565b60008060408385031215612965578182fd5b82359150602083013561297781612ecc565b809150509250929050565b600381106129a057634e487b7160e01b600052602160045260246000fd5b9052565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151151560a08301525050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351612a12816017850160208801612e73565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612a43816028840160208801612e73565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612ae257612acf8385516129a4565b9284019260c09290920191600101612abc565b50909695505050505050565b6020815260008251806020840152612b0d816040850160208701612e73565b601f01601f19169190910160400192915050565b60208082526023908201527f5374616b696e673a20616363657074206f6e6c7920706f73697469766520616d6040820152621bdd5d60ea1b606082015260800190565b60208082526018908201527714185e5b595b9d0e881d1c985b9cd9995c8819985a5b195960421b604082015260600190565b60208082526018908201527714dd185ada5b99ce88151c985b9cd9995c8819985a5b195960421b604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526013908201527214dd185ad94e881cdd185ad94819985a5b1959606a1b604082015260600190565b60208082526025908201527f5374616b696e673a20616363657074206f6e6c79206e6f6e207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526015908201527414dd185ad94e881d5b9cdd185ad94819985a5b1959605a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f5374616b696e673a205374616b652073686f756c6420626520706f73697469766040820152606560f81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f5374616b696e673a204e65656420746f20617070726f766520746865207472616040820152643739b332b960d91b606082015260800190565b81518152602080830151908201526040808301516001600160a01b0316908201526060808301516080830191612dbd90840182612982565b5092915050565b60c0810161097a82846129a4565b848152602081018490526001600160a01b038316604082015260808101612dfc6060830184612982565b95945050505050565b60008219821115612e1857612e18612eb6565b500190565b600082612e3857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612e5757612e57612eb6565b500290565b600082821015612e6e57612e6e612eb6565b500390565b60005b83811015612e8e578181015183820152602001612e76565b838111156115f15750506000910152565b600081612eae57612eae612eb6565b506000190190565b634e487b7160e01b600052601160045260246000fd5b80151581146118d357600080fdfeba5a0c0b7729b9774e61656bc459fba2190706e84ddb059fcd206d5ab3de9b347d26d95f8ae6390bb30573972090129bd7a3bc0405a4903023e177077b473eeda26469706673582212209bb5f118ee0a9b6a49c5e6cb836d320fdfb3acab85bafa3ed7fa376aa824eeae64736f6c63430008040033";
