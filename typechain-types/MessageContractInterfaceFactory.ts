/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { MessageContractInterface } from "./MessageContractInterface";

export class MessageContractInterfaceFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageContractInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MessageContractInterface;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subjectId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "subjectId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "senderPubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "receiverPubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "myEncryptMessage",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
        ],
        internalType: "struct MessageContractInterface.Message",
        name: "message",
        type: "tuple",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
