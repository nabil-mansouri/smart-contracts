/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NFTMarketPlace } from "./NFTMarketPlace";

export class NFTMarketPlaceFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NFTMarketPlace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketPlace>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarketPlace {
    return super.attach(address) as NFTMarketPlace;
  }
  connect(signer: Signer): NFTMarketPlaceFactory {
    return super.connect(signer) as NFTMarketPlaceFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketPlace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketPlace;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102638061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b6100586100cb565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100823660046101ca565b6100da565b336100906100cb565b6001600160a01b0316146100bf5760405162461bcd60e51b81526004016100b6906101f8565b60405180910390fd5b6100c9600061017a565b565b6000546001600160a01b031690565b336100e36100cb565b6001600160a01b0316146101095760405162461bcd60e51b81526004016100b6906101f8565b6001600160a01b03811661016e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100b6565b6101778161017a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101db578081fd5b81356001600160a01b03811681146101f1578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212201a78605afc482bdbf8d8cf3376db3c9a23c6837cf848a0881177cecad14eeb3764736f6c63430008040033";
